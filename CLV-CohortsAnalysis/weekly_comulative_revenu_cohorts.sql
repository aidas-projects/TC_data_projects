WITH user_first_visit AS (
  SELECT 
    user_pseudo_id, 
    DATE_TRUNC(PARSE_DATE('%Y%m%d', MIN(event_date)), WEEK) AS first_visit_week 
  FROM turing_data_analytics.raw_events 
  
  GROUP BY user_pseudo_id
), --identifying week of each user's first visit. Grouping by IDs to make sure only unique IDs left

weekly_data AS (
  SELECT
    c.first_visit_week,
    TIMESTAMP_DIFF(PARSE_DATE('%Y%m%d', raw_events.event_date), c.first_visit_week, WEEK) as relative_week,
    SUM(raw_events.purchase_revenue_in_usd) as revenue
  FROM
    turing_data_analytics.raw_events
    JOIN user_first_visit c ON raw_events.user_pseudo_id = c.user_pseudo_id
  WHERE
    raw_events.event_name = 'purchase'
    AND TIMESTAMP_DIFF(PARSE_DATE('%Y%m%d', raw_events.event_date), c.first_visit_week, WEEK) BETWEEN 0 AND 12
  GROUP BY
    c.first_visit_week,
    relative_week
), --calculating how much revenue was generated during which week after first visit. relative_week = 0 (same week)

cumulative_sum_revenue AS (
  SELECT
    first_visit_week,
    relative_week,
    SUM(revenue) OVER (PARTITION BY first_visit_week ORDER BY relative_week) as cumulative_revenue
  FROM
    weekly_data
) -- calculating cumulative revenue for each user cohort at each week after their first visit 

SELECT
  first_visit_week,
  SUM(CASE WHEN relative_week = 0 THEN cumulative_revenue ELSE 0 END) as week0,
  SUM(CASE WHEN relative_week = 1 THEN cumulative_revenue ELSE 0 END) as week1,
  SUM(CASE WHEN relative_week = 2 THEN cumulative_revenue ELSE 0 END) as week2,
  SUM(CASE WHEN relative_week = 3 THEN cumulative_revenue ELSE 0 END) as week3,
  SUM(CASE WHEN relative_week = 4 THEN cumulative_revenue ELSE 0 END) as week4,
  SUM(CASE WHEN relative_week = 5 THEN cumulative_revenue ELSE 0 END) as week5,
  SUM(CASE WHEN relative_week = 6 THEN cumulative_revenue ELSE 0 END) as week6,
  SUM(CASE WHEN relative_week = 7 THEN cumulative_revenue ELSE 0 END) as week7,
  SUM(CASE WHEN relative_week = 8 THEN cumulative_revenue ELSE 0 END) as week8,
  SUM(CASE WHEN relative_week = 9 THEN cumulative_revenue ELSE 0 END) as week9,
  SUM(CASE WHEN relative_week = 10 THEN cumulative_revenue ELSE 0 END) as week10,
  SUM(CASE WHEN relative_week = 11 THEN cumulative_revenue ELSE 0 END) as week11,
  SUM(CASE WHEN relative_week = 12 THEN cumulative_revenue ELSE 0 END) as week12,
  --calculating the cumulative revenue generated by each user cohort in each of the 13 weeks following their first visit. 
FROM
  cumulative_sum_revenue
GROUP BY
  first_visit_week
ORDER BY
  first_visit_week ASC;
